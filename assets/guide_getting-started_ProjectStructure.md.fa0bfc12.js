import{_ as e,c as s,o as a,a as n}from"./app.412d8fc1.js";const m=JSON.parse('{"title":"Project structure","description":"","frontmatter":{},"headers":[{"level":2,"title":"Commands","slug":"commands","link":"#commands","children":[]},{"level":2,"title":"Events","slug":"events","link":"#events","children":[]},{"level":2,"title":"Interactions","slug":"interactions","link":"#interactions","children":[{"level":3,"title":"Buttons","slug":"buttons","link":"#buttons","children":[]},{"level":3,"title":"Select-menus","slug":"select-menus","link":"#select-menus","children":[]}]},{"level":2,"title":"Final structure","slug":"final-structure","link":"#final-structure","children":[]}],"relativePath":"guide/getting-started/ProjectStructure.md","lastUpdated":1672135980000}'),t={name:"guide/getting-started/ProjectStructure.md"},l=n(`<h1 id="project-structure" tabindex="-1">Project structure <a class="header-anchor" href="#project-structure" aria-hidden="true">#</a></h1><p>Create a directory in which the bot will be.</p><p>Install dependencies and create configuration file (usually called <code>config.json</code>)</p><p>Create a folder with the code of the bot (usualy called <code>src</code>)</p><p>In source directory create <code>index.js</code> file in which will be the client&#39;s declaration.</p><h2 id="commands" tabindex="-1">Commands <a class="header-anchor" href="#commands" aria-hidden="true">#</a></h2><p>Create directory for the commands (usually called <code>commands</code>).</p><h2 id="events" tabindex="-1">Events <a class="header-anchor" href="#events" aria-hidden="true">#</a></h2><p>Create directory for the events (usually called <code>events</code> or <code>listeners</code>).</p><h2 id="interactions" tabindex="-1">Interactions <a class="header-anchor" href="#interactions" aria-hidden="true">#</a></h2><p>Create directory for the buttons and select-menus (usually called <code>interactions</code>).</p><h3 id="buttons" tabindex="-1">Buttons <a class="header-anchor" href="#buttons" aria-hidden="true">#</a></h3><p>Create directory for the buttons (usually called <code>buttons</code>).</p><h3 id="select-menus" tabindex="-1">Select-menus <a class="header-anchor" href="#select-menus" aria-hidden="true">#</a></h3><p>Create directory for the select-menus (usually called <code>select-menus</code>).</p><hr><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Folders can contain as many sub-folders as desired</p></div><h2 id="final-structure" tabindex="-1">Final structure <a class="header-anchor" href="#final-structure" aria-hidden="true">#</a></h2><p>The final structure of the bot :</p><div class="language-text"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">bot</span></span>
<span class="line"><span style="color:#A6ACCD;">   │   config.json</span></span>
<span class="line"><span style="color:#A6ACCD;">   │   package-lock.json</span></span>
<span class="line"><span style="color:#A6ACCD;">   │   package.json</span></span>
<span class="line"><span style="color:#A6ACCD;">   │</span></span>
<span class="line"><span style="color:#A6ACCD;">   ├───node_modules</span></span>
<span class="line"><span style="color:#A6ACCD;">   └───src</span></span>
<span class="line"><span style="color:#A6ACCD;">       │   index.js</span></span>
<span class="line"><span style="color:#A6ACCD;">       │</span></span>
<span class="line"><span style="color:#A6ACCD;">       ├───commands</span></span>
<span class="line"><span style="color:#A6ACCD;">       ├───events</span></span>
<span class="line"><span style="color:#A6ACCD;">       └───interactions</span></span>
<span class="line"><span style="color:#A6ACCD;">           ├───buttons</span></span>
<span class="line"><span style="color:#A6ACCD;">           └───select-menus</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div>`,20),c=[l];function r(o,i,d,p,u,h){return a(),s("div",null,c)}const f=e(t,[["render",r]]);export{m as __pageData,f as default};
