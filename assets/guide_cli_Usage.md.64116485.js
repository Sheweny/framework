import{_ as e,c as a,o as s,a as n}from"./app.c3280094.js";const C=JSON.parse('{"title":"Usage","description":"","frontmatter":{},"headers":[{"level":2,"title":"Informations","slug":"informations","link":"#informations","children":[]},{"level":2,"title":"Create command","slug":"create-command","link":"#create-command","children":[]},{"level":2,"title":"Add command","slug":"add-command","link":"#add-command","children":[]},{"level":2,"title":"Init command","slug":"init-command","link":"#init-command","children":[]},{"level":2,"title":"Version command","slug":"version-command","link":"#version-command","children":[]},{"level":2,"title":"Common errors","slug":"common-errors","link":"#common-errors","children":[{"level":3,"title":"Execution Policy","slug":"execution-policy","link":"#execution-policy","children":[]}]}],"relativePath":"guide/cli/Usage.md","lastUpdated":1672135980000}'),o={name:"guide/cli/Usage.md"},t=n(`<h1 id="usage" tabindex="-1">Usage <a class="header-anchor" href="#usage" aria-hidden="true">#</a></h1><h2 id="informations" tabindex="-1">Informations <a class="header-anchor" href="#informations" aria-hidden="true">#</a></h2><p>The command line interface has several prefixes which are <code>sheweny</code> and <code>shw</code>, so for the following commands, you can use one of the 2 prefixes. The help command is also at your disposal if you are too lazy to come to the guide.</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">sheweny</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--help</span></span>
<span class="line"></span></code></pre></div><h2 id="create-command" tabindex="-1"><code>Create</code> command <a class="header-anchor" href="#create-command" aria-hidden="true">#</a></h2><p>To create a project, you just need to run the following command.</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">sheweny</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">create</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">project_name</span><span style="color:#89DDFF;">]</span></span>
<span class="line"></span></code></pre></div><p>Then you will have a series of questions that will allow you to refine the result of your project creation and to have a bot start that meets your expectations. Depending on what you have answered, you will have access from the start, the creation of the project has commands, events, or interactions.</p><p>For more information, you can run the help command: <code>sheweny --help create</code></p><h2 id="add-command" tabindex="-1"><code>Add</code> command <a class="header-anchor" href="#add-command" aria-hidden="true">#</a></h2><p>To add a template in your project with the sheweny framework, you just need to run the following command.</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">sheweny</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">add</span></span>
<span class="line"></span></code></pre></div><p>You have several types of template addition depending on what you want to add</p><ul><li>command</li><li>event</li><li>button</li><li>selectmenu</li><li>inhibitor</li></ul><p>After choosing the type of addition, you can answer the questions that are offered to once again refine the result of adding a template.</p><p>For more information, you can run the help command: <code>sheweny --help add</code>.</p><h2 id="init-command" tabindex="-1"><code>Init</code> command <a class="header-anchor" href="#init-command" aria-hidden="true">#</a></h2><p>This command is used to initialize the Command Line Interface (CLI) with <strong>an existing project</strong> .</p><h2 id="version-command" tabindex="-1"><code>Version</code> command <a class="header-anchor" href="#version-command" aria-hidden="true">#</a></h2><p>This command return the version of the CLI (not the framework).</p><hr><p>After having done all this, you can of course edit the project code as you wish with an editor, using the rest of the Guide or with the Documentation.</p><h2 id="common-errors" tabindex="-1">Common errors <a class="header-anchor" href="#common-errors" aria-hidden="true">#</a></h2><h3 id="execution-policy" tabindex="-1">Execution Policy <a class="header-anchor" href="#execution-policy" aria-hidden="true">#</a></h3><p>If you have an error :</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">File</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">cannot</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">be</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">loaded</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">because</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">the</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">execution</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">of</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">scripts</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">is</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">disabled</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">on</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">this</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">system.</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Please</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">see</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">get-help about_signing</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">for</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">more</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">details</span></span>
<span class="line"></span></code></pre></div><p>Changed script execution parameter. On an administrator powershell, you can do this by running the following command:</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">Set-ExecutionPolicy</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Unrestricted</span></span>
<span class="line"></span></code></pre></div>`,28),l=[t];function c(r,i,p,d,h,m){return s(),a("div",null,l)}const u=e(o,[["render",c]]);export{C as __pageData,u as default};
